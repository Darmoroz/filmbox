{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SCAAC,EAAAD,EAAA,S,oDCAAE,GCAAC,EAAAH,EAAA,SDAAA,EAAA,U,wDA4CAI,EAlCAC,eAAoCC,EAASC,EAAO,GACrC,IAATA,IACFJ,EAAAK,QAAQC,UAAY,GACpBC,MAEF,EAAAC,EAAAC,SAAOT,EAAAU,QACP,IACE,MAAMC,QAAiB,EAAAb,EAAAc,WAAU,SAAST,IAAW,CAAEC,KAAMA,IACvDS,EAAUF,EAASG,KAAKD,QAE9B,GAAIT,EADeO,EAASG,KAAKC,YAS/B,YAPAhB,EAAAiB,OAAOC,KAAK,mBAAoB,CAC9BC,SAAU,aACVC,SAAU,OACVF,KAAM,CACJG,UAAW,UAKjB,MAAMC,GAAS,EAAAC,EAAAb,SAA8BI,GAC7Cb,EAAAK,QAAQkB,mBAAmB,YAAaF,GACxC,MAAMG,EAAWC,SAASC,cAAc,0BACpCF,GACFG,EAA8BC,QAAQJ,E,CAExC,MAAOK,GAEP,OADAC,QAAQC,IAAI,QAASF,GACd,I,CACR,SACC,EAAArB,EAAAC,SAAOT,EAAAU,O,GExCXX,EAAAF,EAAA,S,wDAgEAmC,EAtDA9B,eAAkC+B,EAAO7B,GACvC,IAAIJ,EAAAkC,aAAaC,iBAAiB,SAASC,KAAIC,IAC7CA,EAAIC,UAAUC,OAAO,eACrBF,EAAIG,gBAAgB,WAAW,IAEpB,IAATpC,IACFJ,EAAAK,QAAQC,UAAY,GACpBC,MAEF,EAAAC,EAAAC,SAAOT,EAAAU,QACP,IACE,MAAMC,QAAiB,EAAAb,EAAAc,WAAU,eAAgB,CAC/CqB,MAAOA,EAAMQ,M,KACbrC,IAEIS,EAAUF,EAASG,KAAKD,QACxB6B,EAAa/B,EAASG,KAAKC,YACjC,IAAKF,EAAQ8B,OASX,OARA5C,EAAAiB,OAAOC,KAAK,GAAGgB,EAAMQ,kCAAmC,CACtDvB,SAAU,aACVC,SAAU,OACVF,KAAM,CACJG,UAAW,eAGfpB,EAAA4C,gBAAgBC,iBAAiBJ,MAAQ,IAG3C,GAAIrC,EAAOsC,EAQT,YAPA3C,EAAAiB,OAAOC,KAAK,mBAAoB,CAC9BC,SAAU,aACVC,SAAU,OACVF,KAAM,CACJG,UAAW,UAMjB,MAAMC,GAAS,EAAAC,EAAAb,SAA8BI,GAC7Cb,EAAAK,QAAQkB,mBAAmB,YAAaF,GAExC,MAAMG,EAAWC,SAASC,cAAc,0BACpCF,GACFsB,EAA4BlB,QAAQJ,E,CAEtC,MAAOK,GAEP,OADAC,QAAQC,IAAI,QAASF,GACd,I,CACR,SACC,EAAArB,EAAAC,SAAOT,EAAAU,O,GDvDJ,MAAMqC,EAA6B,IAAIC,sBAC5C,CAACC,EAASC,KACRD,EAAQE,SAAQC,IACVA,EAAMC,iBACRH,EAASI,UAAUF,EAAMG,QACzBvD,EAAAwD,WAAWC,oBAAsB,EACjCC,EAAqB1D,EAAAwD,WAAWC,oB,GAElC,IAGOX,EAA8B,IAAIE,sBAC7C,CAACC,EAASC,KACRD,EAAQE,SAAQC,IACVA,EAAMC,iBACRH,EAASI,UAAUF,EAAMG,QACzBvD,EAAAwD,WAAWC,oBAAsB,EACjCzB,EAAmBhC,EAAA2D,WAAY3D,EAAAwD,WAAWC,oB,GAE5C,IAGO9B,EAAgC,IAAIqB,sBAC/C,CAACC,EAASC,KACRD,EAAQE,SAAQC,IACVA,EAAMC,iBACRH,EAASI,UAAUF,EAAMG,QACzBvD,EAAAwD,WAAWC,oBAAsB,EACjCxD,EAAqBD,EAAAG,QAAQsC,MAAOzC,EAAAwD,WAAWC,oB,GAEjD,IAIC,SAASlD,IACdP,EAAAwD,WAAWC,mBAAqB,C,KFblCC,EApBAxD,eAAoCE,EAAO,IACzC,EAAAI,EAAAC,SAAOT,EAAAU,QACP,IACE,MAAMC,QAAiB,EAAAb,EAAAc,WAAU,qBAAsB,CAAER,KAAMA,IACzDiB,GAAS,EAAAC,EAAAb,SAA8BE,EAASG,KAAKD,SAC3Db,EAAAK,QAAQkB,mBAAmB,YAAaF,GACxCrB,EAAAK,QAAQuD,iBAAiB,QAASC,EAAApD,SAElC,MAAMe,EAAWC,SAASC,cAAc,0BACpCF,GACFuB,EAA2BnB,QAAQJ,E,CAErC,MAAOK,GAEP,OADAC,QAAQC,IAAI,QAASF,GACd,I,CACR,SACC,EAAArB,EAAAC,SAAOT,EAAAU,O,4CIvBXX,EAAAF,EAAA,S,iBAeAiE,EAXA,SAAiCC,GAC/BA,EAAEC,iBAEFhE,EAAA2D,WAAWlB,MAAQsB,EAAER,OAAOV,iBAAiBJ,MAAMwB,OAC9CjE,EAAA2D,WAAWlB,MAIhBT,EAAmBhC,EAAA2D,WAAY,GAH7B5D,EAAAiB,OAAOC,KAAK,uB,eCThBjB,EAAAH,EAAA,S,IAsCAqE,EAlCAhE,eAAiC6D,GAC/B/D,EAAA4C,gBAAgBC,iBAAiBJ,MAAQ,GACzC,MAAM0B,EAAgBJ,EAAER,OACxB,GAAIY,IAAkBJ,EAAEK,cACtB,OAEF,MAAMC,EAAU,IAAIN,EAAEK,cAAcjC,iBAAiB,SAC/CmC,EAAYD,EAAQE,QAAOlC,GAC/BA,EAAIC,UAAUkC,SAAS,iBAGzB,GADAF,EAAU,IAAI9B,gBAAgB,YAC1B8B,EAAU,KAAOH,EAQrB,OALAE,EAAQjC,KAAIC,GAAOA,EAAIC,UAAUC,OAAO,iBACxC4B,EAAc7B,UAAUmC,IAAI,eAC5BN,EAAcO,aAAa,YAAY,GACvC1E,EAAAG,QAAQsC,MAAQ0B,EAAcQ,QAAQlC,MAE9BzC,EAAAG,QAAQsC,OACd,IAAK,YACHiB,IACA,MACF,IAAK,UACL,IAAK,YACL,IAAK,WACHzD,EAAqBD,EAAAG,QAAQsC,OAC7B,MAEF,QACEX,QAAQC,IAAI,mB,GNzBlB,EAAA6C,EAAAC,uBAEAC,OAAOlB,iBAAiB,oBAAoB1D,UAC1C,IACE6E,OAAOC,OAAOhF,EAAAiF,aAAc,EAAAC,EAAAzE,YAC5BiD,IAEA1D,EAAA4C,gBAAgBgB,iBAAiB,SAAUE,GAC3CrC,SAAS0D,KAAKvB,iBAAiB,SAAUwB,EAAAxF,EAAA,CAASyF,EAAA5E,QAAc,MAChET,EAAAsF,eAAe1B,iBAAiB,QAASgB,EAAAW,aACzCvF,EAAAkC,aAAa0B,iBAAiB,QAASM,EAI/B,CAHR,MAAOrC,GAEP,OADAC,QAAQC,IAAI,QAASF,GACd,I,CACC","sources":["src/js/home.js","src/js/render/renderTrendingMovies.js","src/js/render/renderFeaturedMovies.js","src/js/infiniteScroll.js","src/js/render/renderSearchMovies.js","src/js/onSubmitSearchMovieForm.js","src/js/getFeaturedMovies.js"],"sourcesContent":["import throttle from 'lodash.throttle';\nimport renderTrendingMovies from './render/renderTrendingMovies';\nimport handleScroll from './toTopBtn';\nimport { genres, searchMovieForm, toggleThemeBtn, featuredBtns } from './refs';\nimport { setThemeFirstRender, toggleTheme } from './theme';\nimport onSubmitSearchMovieForm from './onSubmitSearchMovieForm';\nimport getAllGenres from './getAllGenres';\nimport getFeaturedMovies from './getFeaturedMovies';\n\nsetThemeFirstRender();\n\nwindow.addEventListener('DOMContentLoaded', async () => {\n  try {\n    Object.assign(genres, await getAllGenres());\n    renderTrendingMovies();\n\n    searchMovieForm.addEventListener('submit', onSubmitSearchMovieForm);\n    document.body.addEventListener('scroll', throttle(handleScroll, 500));\n    toggleThemeBtn.addEventListener('click', toggleTheme);\n    featuredBtns.addEventListener('click', getFeaturedMovies);\n  } catch (error) {\n    console.log('Error', error);\n    return null;\n  } finally {\n  }\n});\n","import { getMovies } from '../api';\nimport { gallery, loader } from '../refs';\nimport toggle from '../toggle';\nimport createMarkupGalleryMoviesCard from '../markup/createMarkupGalleryMoviesCard';\nimport renderMovieFullInfo from './renderMovieFullInfo';\nimport { observerGalleryTrendMovies } from '../infiniteScroll';\n\nasync function renderTrendingMovies(page = 1) {\n  toggle(loader);\n  try {\n    const response = await getMovies(`trending/movie/day`, { page: page });\n    const markup = createMarkupGalleryMoviesCard(response.data.results);\n    gallery.insertAdjacentHTML('beforeend', markup);\n    gallery.addEventListener('click', renderMovieFullInfo);\n\n    const lastCard = document.querySelector('.movie-card:last-child');\n    if (lastCard) {\n      observerGalleryTrendMovies.observe(lastCard);\n    }\n  } catch (error) {\n    console.log('Error', error);\n    return null;\n  } finally {\n    toggle(loader);\n  }\n}\n\nexport default renderTrendingMovies;\n","import { Notify } from 'notiflix';\nimport { getMovies } from '../api';\nimport createMarkupGalleryMoviesCard from '../markup/createMarkupGalleryMoviesCard';\nimport { gallery, loader } from '../refs';\nimport toggle from '../toggle';\nimport {\n  observerGalleryFeaturedMovies,\n  resetNextPagePagination,\n} from '../infiniteScroll';\n\nasync function renderFeaturedMovies(urlPath, page = 1) {\n  if (page === 1) {\n    gallery.innerHTML = '';\n    resetNextPagePagination();\n  }\n  toggle(loader);\n  try {\n    const response = await getMovies(`movie/${urlPath}`, { page: page });\n    const results = response.data.results;\n    const totalPages = response.data.total_pages;\n    if (page > totalPages) {\n      Notify.info(`It was last page`, {\n        position: 'center-top',\n        fontSize: '16px',\n        info: {\n          textColor: '#000',\n        },\n      });\n      return;\n    }\n    const markup = createMarkupGalleryMoviesCard(results);\n    gallery.insertAdjacentHTML('beforeend', markup);\n    const lastCard = document.querySelector('.movie-card:last-child');\n    if (lastCard) {\n      observerGalleryFeaturedMovies.observe(lastCard);\n    }\n  } catch (error) {\n    console.log('Error', error);\n    return null;\n  } finally {\n    toggle(loader);\n  }\n}\n\nexport default renderFeaturedMovies;\n","import { pagination, queryMovie, urlPath } from './refs';\nimport renderFeaturedMovies from './render/renderFeaturedMovies';\nimport renderSearchMovies from './render/renderSearchMovies';\nimport renderTrendingMovies from './render/renderTrendingMovies';\n\nexport const observerGalleryTrendMovies = new IntersectionObserver(\n  (entries, observer) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        observer.unobserve(entry.target);\n        pagination.nextPagePagination += 1;\n        renderTrendingMovies(pagination.nextPagePagination);\n      }\n    });\n  }\n);\nexport const observerGallerySearchMovies = new IntersectionObserver(\n  (entries, observer) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        observer.unobserve(entry.target);\n        pagination.nextPagePagination += 1;\n        renderSearchMovies(queryMovie, pagination.nextPagePagination);\n      }\n    });\n  }\n);\nexport const observerGalleryFeaturedMovies = new IntersectionObserver(\n  (entries, observer) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        observer.unobserve(entry.target);\n        pagination.nextPagePagination += 1;\n        renderFeaturedMovies(urlPath.value, pagination.nextPagePagination);\n      }\n    });\n  }\n);\n\nexport function resetNextPagePagination() {\n  pagination.nextPagePagination = 1;\n}\n","import { Notify } from 'notiflix';\nimport { getMovies } from '../api';\nimport { featuredBtns, gallery, loader, searchMovieForm } from '../refs';\nimport toggle from '../toggle';\nimport createMarkupGalleryMoviesCard from '../markup/createMarkupGalleryMoviesCard';\nimport {\n  observerGallerySearchMovies,\n  resetNextPagePagination,\n} from '../infiniteScroll';\n\nasync function renderSearchMovies(query, page) {\n  [...featuredBtns.querySelectorAll('.btn')].map(btn => {\n    btn.classList.remove('btn--active');\n    btn.removeAttribute('disabled');\n  });\n  if (page === 1) {\n    gallery.innerHTML = '';\n    resetNextPagePagination();\n  }\n  toggle(loader);\n  try {\n    const response = await getMovies('search/movie', {\n      query: query.value,\n      page,\n    });\n    const results = response.data.results;\n    const totalPages = response.data.total_pages;\n    if (!results.length) {\n      Notify.info(`${query.value} nothing found. Try again.`, {\n        position: 'center-top',\n        fontSize: '16px',\n        info: {\n          textColor: '#000',\n        },\n      });\n      searchMovieForm.searchMovieQuery.value = '';\n      return;\n    }\n    if (page > totalPages) {\n      Notify.info(`It was last page`, {\n        position: 'center-top',\n        fontSize: '16px',\n        info: {\n          textColor: '#000',\n        },\n      });\n      return;\n    }\n\n    const markup = createMarkupGalleryMoviesCard(results);\n    gallery.insertAdjacentHTML('beforeend', markup);\n\n    const lastCard = document.querySelector('.movie-card:last-child');\n    if (lastCard) {\n      observerGallerySearchMovies.observe(lastCard);\n    }\n  } catch (error) {\n    console.log('Error', error);\n    return null;\n  } finally {\n    toggle(loader);\n  }\n}\n\nexport default renderSearchMovies;\n","import { Notify } from 'notiflix';\nimport renderSearchMovies from './render/renderSearchMovies';\nimport { queryMovie } from './refs';\n\nfunction onSubmitSearchMovieForm(e) {\n  e.preventDefault();\n\n  queryMovie.value = e.target.searchMovieQuery.value.trim();\n  if (!queryMovie.value) {\n    Notify.info('Please enter request');\n    return;\n  }\n  renderSearchMovies(queryMovie, 1);\n}\n\nexport default onSubmitSearchMovieForm;\n","import { searchMovieForm, urlPath } from './refs';\nimport renderFeaturedMovies from './render/renderFeaturedMovies';\nimport renderTrendingMovies from './render/renderTrendingMovies';\n\nasync function getFeaturedMovies(e) {\n  searchMovieForm.searchMovieQuery.value = '';\n  const targetElement = e.target;\n  if (targetElement === e.currentTarget) {\n    return;\n  }\n  const allBtns = [...e.currentTarget.querySelectorAll('.btn')];\n  const activeBtn = allBtns.filter(btn =>\n    btn.classList.contains('btn--active')\n  );\n  activeBtn[0]?.removeAttribute('disabled');\n  if (activeBtn[0] === targetElement) {\n    return;\n  }\n  allBtns.map(btn => btn.classList.remove('btn--active'));\n  targetElement.classList.add('btn--active');\n  targetElement.setAttribute('disabled', true);\n  urlPath.value = targetElement.dataset.value;\n\n  switch (urlPath.value) {\n    case 'trend_day':\n      renderTrendingMovies();\n      break;\n    case 'popular':\n    case 'top_rated':\n    case 'upcoming':\n      renderFeaturedMovies(urlPath.value);\n      break;\n\n    default:\n      console.log('something wrong');\n  }\n}\n\nexport default getFeaturedMovies;\n"],"names":["$9OeKo","parcelRequire","$7rYDH","$7Y9D8","$krGWQ","$6146a8fbb8e6a512$export$2e2bcd8739ae039","async","urlPath","page","gallery","innerHTML","$bf358a55e5e85b86$export$2faba8f7b002dd52","$6ZObK","default","loader","response","getMovies","results","data","total_pages","Notify","info","position","fontSize","textColor","markup","$aLPhN","insertAdjacentHTML","lastCard","document","querySelector","$bf358a55e5e85b86$export$c6b1dc255fab6aec","observe","error","console","log","$740abe515043fb87$export$2e2bcd8739ae039","query","featuredBtns","querySelectorAll","map","btn","classList","remove","removeAttribute","value","totalPages","length","searchMovieForm","searchMovieQuery","$bf358a55e5e85b86$export$cd39ae8a5da59201","$bf358a55e5e85b86$export$223c31cbeac42de7","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","unobserve","target","pagination","nextPagePagination","$ffcaa678058365c5$export$2e2bcd8739ae039","queryMovie","addEventListener","$boduE","$20d61bcb2076a5c6$export$2e2bcd8739ae039","e","preventDefault","trim","$0cbd389911606141$export$2e2bcd8739ae039","targetElement","currentTarget","allBtns","activeBtn","filter","contains","add","setAttribute","dataset","$4S0r6","setThemeFirstRender","window","Object","assign","genres","$aomY9","body","$parcel$interopDefault","$hkaSy","toggleThemeBtn","toggleTheme"],"version":3,"file":"index.05ab170e.js.map"}