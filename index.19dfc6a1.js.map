{"mappings":"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","sources":["src/js/home.js","src/js/render/renderTrendingMovies.js","src/js/infiniteScroll.js","src/js/render/renderSearchMovies.js","src/js/onSubmitSearchMovieForm.js"],"sourcesContent":["import throttle from 'lodash.throttle';\nimport renderTrendingMovies from './render/renderTrendingMovies';\nimport handleScroll from './toTopBtn';\nimport { genres, searchMovieForm, toggleThemeBtn } from './refs';\nimport { setThemeFirstRender, toggleTheme } from './theme';\nimport onSubmitSearchMovieForm from './onSubmitSearchMovieForm';\nimport getAllGenres from './getAllGenres';\n\nsetThemeFirstRender();\n\nwindow.addEventListener('DOMContentLoaded', async () => {\n  try {\n    Object.assign(genres, await getAllGenres());\n    renderTrendingMovies();\n\n    searchMovieForm.addEventListener('submit', onSubmitSearchMovieForm);\n    document.body.addEventListener('scroll', throttle(handleScroll, 500));\n    toggleThemeBtn.addEventListener('click', toggleTheme);\n  } catch (error) {\n    console.log('Error', error);\n    return null;\n  } finally {\n  }\n});\n","import { getMovies } from '../api';\nimport { gallery, loader } from '../refs';\nimport toggle from '../toggle';\nimport createMarkupGalleryMoviesCard from '../markup/createMarkupGalleryMoviesCard';\nimport renderMovieFullInfo from './renderMovieFullInfo';\nimport { observerGalleryTrendMovies } from '../infiniteScroll';\n\nasync function renderTrendingMovies(page = 1) {\n  toggle(loader);\n  try {\n    const response = await getMovies(`trending/movie/day`, { page: page });\n    const markup = createMarkupGalleryMoviesCard(response.data.results);\n    gallery.insertAdjacentHTML('beforeend', markup);\n    gallery.addEventListener('click', renderMovieFullInfo);\n\n    const lastCard = document.querySelector('.movie-card:last-child');\n    if (lastCard) {\n      observerGalleryTrendMovies.observe(lastCard);\n    }\n  } catch (error) {\n    console.log('Error', error);\n    return null;\n  } finally {\n    toggle(loader);\n  }\n}\n\nexport default renderTrendingMovies;\n","import { pagination, queryMovie } from './refs';\nimport renderSearchMovies from './render/renderSearchMovies';\nimport renderTrendingMovies from './render/renderTrendingMovies';\n\nexport const observerGalleryTrendMovies = new IntersectionObserver(\n  (entries, observer) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        observer.unobserve(entry.target);\n        pagination.nextPagePagination += 1;\n        renderTrendingMovies(pagination.nextPagePagination);\n      }\n    });\n  }\n);\nexport const observerGallerySearchMovies = new IntersectionObserver(\n  (entries, observer) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        observer.unobserve(entry.target);\n        pagination.nextPagePagination += 1;\n        renderSearchMovies(queryMovie, pagination.nextPagePagination);\n      }\n    });\n  }\n);\n\nexport function resetNextPagePagination() {\n  pagination.nextPagePagination = 1;\n}\n","import { Notify } from 'notiflix';\nimport { getMovies } from '../api';\nimport { gallery, loader, searchMovieForm } from '../refs';\nimport toggle from '../toggle';\nimport createMarkupGalleryMoviesCard from '../markup/createMarkupGalleryMoviesCard';\nimport {\n  observerGallerySearchMovies,\n  resetNextPagePagination,\n} from '../infiniteScroll';\n\nasync function renderSearchMovies(query, page) {\n  if (page === 1) {\n    gallery.innerHTML = '';\n    resetNextPagePagination();\n  }\n  toggle(loader);\n  try {\n    const response = await getMovies('search/movie', {\n      query: query.value,\n      page,\n    });\n    const results = response.data.results;\n    const totalPages = response.data.total_pages;\n    if (!results.length) {\n      Notify.info(`${query.value} nothing found. Try again.`, {\n        position: 'center-top',\n        fontSize: '16px',\n        info: {\n          textColor: '#000',\n        },\n      });\n      searchMovieForm.searchMovieQuery.value = '';\n      return;\n    }\n    if (page > totalPages) {\n      Notify.info(`It was last page`, {\n        position: 'center-top',\n        fontSize: '16px',\n        info: {\n          textColor: '#000',\n        },\n      });\n      return;\n    }\n\n    const markup = createMarkupGalleryMoviesCard(results);\n    gallery.insertAdjacentHTML('beforeend', markup);\n\n    const lastCard = document.querySelector('.movie-card:last-child');\n    if (lastCard) {\n      observerGallerySearchMovies.observe(lastCard);\n    }\n  } catch (error) {\n    console.log('Error', error);\n    return null;\n  } finally {\n    toggle(loader);\n  }\n}\n\nexport default renderSearchMovies;\n","import { Notify } from 'notiflix';\nimport renderSearchMovies from './render/renderSearchMovies';\nimport { queryMovie } from './refs';\n\nfunction onSubmitSearchMovieForm(e) {\n  e.preventDefault();\n\n  queryMovie.value = e.target.searchMovieQuery.value.trim();\n  if (!queryMovie.value) {\n    Notify.info('Please enter request');\n    return;\n  }\n  renderSearchMovies(queryMovie, 1);\n}\n\nexport default onSubmitSearchMovieForm;\n"],"names":["$bpxeT","parcelRequire","$4Nugj","$0641f3aa05616e87$var$_renderSearchMovies","$parcel$interopDefault","$2TvXO","mark","_callee","query","page","response","results","totalPages","markup","lastCard","gallery","innerHTML","$f8acf03b81129d03$export$2faba8f7b002dd52","$k7GPO","default","loader","$b7ONl","getMovies","value","_ctx","sent","data","total_pages","length","$6JpON","Notify","info","concat","position","fontSize","textColor","searchMovieForm","searchMovieQuery","$6mu73","insertAdjacentHTML","document","querySelector","$f8acf03b81129d03$export$cd39ae8a5da59201","observe","console","log","t0","apply","this","arguments","$0641f3aa05616e87$export$2e2bcd8739ae039","$f8acf03b81129d03$export$223c31cbeac42de7","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","unobserve","target","pagination","nextPagePagination","$b12c8daf08db148f$export$2e2bcd8739ae039","queryMovie","$b12c8daf08db148f$var$_renderTrendingMovies","_args","addEventListener","$kfpeU","$c3e2ba566ee1489b$export$2e2bcd8739ae039","e","preventDefault","trim","$9VC5X","setThemeFirstRender","window","Object","genres","$iw235","assign","call","t1","t2","body","$dCfNN","$dEmTs","toggleThemeBtn","toggleTheme","t3"],"version":3,"file":"index.19dfc6a1.js.map"}