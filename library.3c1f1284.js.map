{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,kIAyCA,SAASC,EAAiBC,GAExBC,EADmBD,EAAEE,O,CAIvB,SAASD,EAAoBE,GAG3B,IAAIC,EAFJD,EAAQE,UAAUC,IAAI,eACtBH,EAAQI,aAAa,YAAY,GAEjC,MAAMC,EAAc,IAAIL,EAAQM,cAAcC,UAAUC,MACtDC,GAAOA,IAAQT,IAcjB,GAZAK,EAAYH,UAAUQ,OAAO,eAC7BL,EAAYM,gBAAgB,YAEE,YAA1BX,EAAQY,QAAQC,QAClBZ,GAAS,EAAAa,EAAAC,iBAAgBC,EAAAC,UAEG,UAA1BjB,EAAQY,QAAQC,QAClBZ,GAAS,EAAAa,EAAAC,iBAAgBC,EAAAE,QAE3BjB,EAAOkB,SAAQC,IACbA,EAAmB,UAAIA,EAAQC,OAAOC,KAAIC,GAASA,EAAMC,IAAG,KAEzDvB,EAAOwB,OAIV,OAHAC,QAAQC,IAAI,QACZX,EAAAY,QAAQC,UAAY,uCACpBH,QAAQI,IAAId,EAAAY,SAGd,MAAMG,GAAS,EAAAC,EAAAC,SAA8BhC,GAC7Ce,EAAAY,QAAQC,UAAY,GACpBb,EAAAY,QAAQM,mBAAmB,YAAaH,GACxCf,EAAAY,QAAQO,iBAAiB,QAASC,E,CAGpCC,eAAeD,EAA2BvC,SAClC,EAAAyC,EAAAL,SAAoBpC,GAC1B,MAAM0C,EAAcC,SAASC,cAAc,gBAAgB7B,QAAQC,MACnE2B,SAASE,iBAAiB,gBAAgB,GAAGC,MAAMC,QAAU,OAC7D,MAAMC,EAAaL,SAASE,iBAAiB,gBAAgB,GAC7DG,EAAWlC,gBAAgB,YAEzBkC,EAAWhB,UADO,YAAhBU,EACqB,sBAEA,oBAGEC,SAASM,eAAe,kBAChCC,oBACjB,QACA/B,EAAAgC,eAAeC,4BAEjBJ,EAAWV,iBAAiB,QAASe,E,CAGvC,SAASA,EAAwBrD,GAC/B,MAAMsD,GAAWtD,EAAEE,OAAOa,QAAQuC,QAC5BZ,EAAcC,SAASC,cAAc,gBAE3C,IAAIW,EADJvD,EAAEE,OAAOK,aAAa,YAAY,GAElCiD,EAAAC,OAAOC,QAAQ,cACmB,YAA9BhB,EAAY3B,QAAQC,OACtBuC,GAAY,EAAAtC,EAAAC,iBAAgBC,EAAAC,SAASuC,QAAOC,GAASA,EAAMjC,KAAO2B,KAClE,EAAArC,EAAA4C,iBAAgB1C,EAAAC,QAASmC,GACzBO,YAAW,MACT,EAAAC,EAAA3B,SAAOjB,EAAA6C,QACP,EAAAC,EAAA7B,WACAjB,EAAA+C,eAAelC,UAAY,EAAE,GAC5B,KACH/B,EAAoByC,KAEpBa,GAAY,EAAAtC,EAAAC,iBAAgBC,EAAAE,OAAOsC,QAAOC,GAASA,EAAMjC,KAAO2B,KAChE,EAAArC,EAAA4C,iBAAgB1C,EAAAE,MAAOkC,GACvBO,YAAW,MACT,EAAAC,EAAA3B,SAAOjB,EAAA6C,QACP,EAAAC,EAAA7B,WACAjB,EAAA+C,eAAelC,UAAY,EAAE,GAC5B,KACH/B,EAAoByC,G,EAjGxB,EAAAyB,EAAAC,uBAEAC,OAAO/B,iBAAiB,oBAAoBE,UAC1C,IACE8B,OAAOC,OAAOpD,EAAAK,aAAc,EAAAgD,EAAApC,YAE5BnC,EAAoBkB,EAAAsD,mBACpBtD,EAAAsD,kBAAkBnC,iBAAiB,QAASvC,GAC5CoB,EAAAuD,gBAAgBpC,iBAAiB,QAASvC,GAC1CsE,OAAO/B,iBAAiB,SAAUqC,EAAA9E,EAAA,CAAS+E,EAAAxC,QAAc,MACzDjB,EAAA0D,eAAevC,iBAAiB,QAAS6B,EAAAW,YAIjC,CAHR,MAAOC,GAEP,OADAlD,QAAQC,IAAI,QAASiD,GACd,I,CACC","sources":["src/js/library.js"],"sourcesContent":["import throttle from 'lodash.throttle';\nimport {\n  QUEUE,\n  WATCHED,\n  gallery,\n  genres,\n  globalHandlers,\n  toggleThemeBtn,\n  watchedBtnLibrary,\n  queueBtnLibrary,\n  modal,\n  modalFullMovie,\n} from './refs';\nimport { setThemeFirstRender, toggleTheme } from './theme';\nimport handleScroll from './toTopBtn';\nimport { getLocalStorage, setLocalStorage } from './localStorage';\nimport createMarkupGalleryMoviesCard from './markup/createMarkupGalleryMoviesCard';\nimport renderMovieFullInfo from './render/renderMovieFullInfo';\nimport getAllGenres from './getAllGenres';\nimport toggle from './toggle';\nimport removeListener from './removeListener';\nimport { Notify } from 'notiflix';\n\nsetThemeFirstRender();\n\nwindow.addEventListener('DOMContentLoaded', async () => {\n  try {\n    Object.assign(genres, await getAllGenres());\n\n    renderLibraryMovies(watchedBtnLibrary);\n    watchedBtnLibrary.addEventListener('click', getLibraryMovies);\n    queueBtnLibrary.addEventListener('click', getLibraryMovies);\n    window.addEventListener('scroll', throttle(handleScroll, 500));\n    toggleThemeBtn.addEventListener('click', toggleTheme);\n  } catch (error) {\n    console.log('Error', error);\n    return null;\n  } finally {\n  }\n});\n\nfunction getLibraryMovies(e) {\n  const currentBtn = e.target;\n  renderLibraryMovies(currentBtn);\n}\n\nfunction renderLibraryMovies(btnType) {\n  btnType.classList.add('btn--active');\n  btnType.setAttribute('disabled', true);\n  let movies;\n  const neighborBtn = [...btnType.parentElement.children].find(\n    btn => btn !== btnType\n  );\n  neighborBtn.classList.remove('btn--active');\n  neighborBtn.removeAttribute('disabled');\n\n  if (btnType.dataset.value === 'watched') {\n    movies = getLocalStorage(WATCHED);\n  }\n  if (btnType.dataset.value === 'queue') {\n    movies = getLocalStorage(QUEUE);\n  }\n  movies.forEach(element => {\n    element['genre_ids'] = element.genres.map(ganre => ganre.id);\n  });\n  if (!movies.length) {\n    console.log('abra');\n    gallery.innerHTML = '<p class=\"empty\">empty list</p>';\n    console.dir(gallery);\n    return;\n  }\n  const markup = createMarkupGalleryMoviesCard(movies);\n  gallery.innerHTML = '';\n  gallery.insertAdjacentHTML('beforeend', markup);\n  gallery.addEventListener('click', renderMovieFullInfoLibrary);\n}\n\nasync function renderMovieFullInfoLibrary(e) {\n  await renderMovieFullInfo(e);\n  const currentType = document.querySelector('.btn--active').dataset.value;\n  document.querySelectorAll('.btn--modify')[1].style.display = 'none';\n  const currentBtn = document.querySelectorAll('.btn--modify')[0];\n  currentBtn.removeAttribute('disabled');\n  if (currentType === 'watched') {\n    currentBtn.innerHTML = 'Remove from WATCHED';\n  } else {\n    currentBtn.innerHTML = 'Remove from QUEUE';\n  }\n\n  const btnCollectionBlock = document.getElementById('btn-collection');\n  btnCollectionBlock.removeEventListener(\n    'click',\n    globalHandlers.handleClickAddToCollection\n  );\n  currentBtn.addEventListener('click', removeMoviesFromLibrary);\n}\n\nfunction removeMoviesFromLibrary(e) {\n  const movieId = +e.target.dataset.movieId;\n  const currentType = document.querySelector('.btn--active');\n  e.target.setAttribute('disabled', true);\n  let newMovies;\n  Notify.success('Successful');\n  if (currentType.dataset.value === 'watched') {\n    newMovies = getLocalStorage(WATCHED).filter(movie => movie.id !== movieId);\n    setLocalStorage(WATCHED, newMovies);\n    setTimeout(() => {\n      toggle(modal);\n      removeListener();\n      modalFullMovie.innerHTML = '';\n    }, 1000);\n    renderLibraryMovies(currentType);\n  } else {\n    newMovies = getLocalStorage(QUEUE).filter(movie => movie.id !== movieId);\n    setLocalStorage(QUEUE, newMovies);\n    setTimeout(() => {\n      toggle(modal);\n      removeListener();\n      modalFullMovie.innerHTML = '';\n    }, 1000);\n    renderLibraryMovies(currentType);\n  }\n}\n"],"names":["$9OeKo","parcelRequire","$1cafa503bc57b7a0$var$getLibraryMovies","e","$1cafa503bc57b7a0$var$renderLibraryMovies","target","btnType","movies","classList","add","setAttribute","neighborBtn","parentElement","children","find","btn","remove","removeAttribute","dataset","value","$31u3U","getLocalStorage","$krGWQ","WATCHED","QUEUE","forEach","element","genres","map","ganre","id","length","console","log","gallery","innerHTML","dir","markup","$aLPhN","default","insertAdjacentHTML","addEventListener","$1cafa503bc57b7a0$var$renderMovieFullInfoLibrary","async","$boduE","currentType","document","querySelector","querySelectorAll","style","display","currentBtn","getElementById","removeEventListener","globalHandlers","handleClickAddToCollection","$1cafa503bc57b7a0$var$removeMoviesFromLibrary","movieId","newMovies","$7Y9D8","Notify","success","filter","movie","setLocalStorage","setTimeout","$6ZObK","modal","$20Q1x","modalFullMovie","$4S0r6","setThemeFirstRender","window","Object","assign","$aomY9","watchedBtnLibrary","queueBtnLibrary","$parcel$interopDefault","$hkaSy","toggleThemeBtn","toggleTheme","error"],"version":3,"file":"library.3c1f1284.js.map"}